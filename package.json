{
 "name": "vscode-deploy-reloaded",
 "displayName": "Deploy (Reloaded)",
 "description": "Deploys files of a workspace to a destination.",
 "version": "0.0.32",
 "publisher": "mkloubert",
 "engines": {
  "vscode": "^1.18.0"
 },
 "license": "LGPL-3.0",
 "categories": [
  "Other"
 ],
 "keywords": [
  "Deploy",
  "Workspace",
  "Files",
  "SFTP",
  "Cloud"
 ],
 "activationEvents": [
  "*"
 ],
 "main": "./out/extension",
 "contributes": {
  "commands": [
   {
    "command": "extension.deploy.reloaded.deletePackage",
    "title": "Delete package",
    "category": "Deploy Reloaded"
   },
   {
    "command": "extension.deploy.reloaded.deleteFile",
    "title": "Delete current file",
    "category": "Deploy Reloaded"
   },
   {
    "command": "extension.deploy.reloaded.deployWorkspace",
    "title": "Deploy workspace",
    "category": "Deploy Reloaded"
   },
   {
    "command": "extension.deploy.reloaded.deployFile",
    "title": "Deploy current file",
    "category": "Deploy Reloaded"
   },
   {
    "command": "extension.deploy.reloaded.pullWorkspace",
    "title": "Pull workspace",
    "category": "Deploy Reloaded"
   },
   {
    "command": "extension.deploy.reloaded.pullFile",
    "title": "Pull current file",
    "category": "Deploy Reloaded"
   },
   {
    "command": "extension.deploy.reloaded.listDirectory",
    "title": "List directory",
    "category": "Deploy Reloaded"
   }
  ],
  "keybindings": [
   {
    "command": "extension.deploy.reloaded.deployWorkspace",
    "key": "ctrl+alt+w",
    "mac": "cmd+alt+w"
   },
   {
    "command": "extension.deploy.reloaded.deployFile",
    "key": "ctrl+alt+f",
    "mac": "cmd+alt+f"
   },
   {
    "command": "extension.deploy.reloaded.pullFile",
    "key": "ctrl+alt+p f",
    "mac": "cmd+alt+p f"
   },
   {
    "command": "extension.deploy.reloaded.pullWorkspace",
    "key": "ctrl+alt+p w",
    "mac": "cmd+alt+p w"
   },
   {
    "command": "extension.deploy.reloaded.deletePackage",
    "key": "ctrl+alt+d w",
    "mac": "cmd+alt+d w"
   },
   {
    "command": "extension.deploy.reloaded.deleteFile",
    "key": "ctrl+alt+d f",
    "mac": "cmd+alt+d f"
   },
   {
    "command": "extension.deploy.reloaded.listDirectory",
    "key": "ctrl+alt+d l",
    "mac": "cmd+alt+d l"
   }
  ],
  "configuration": {
   "properties": {
    "deploy.reloaded": {
     "type": "object",
     "scope": "resource",
     "properties": {
      "clearOutputOnStartup": {
       "description": "Clear output on after config has been reloaded or not.",
       "type": "boolean",
       "default": false
      },
      "deployOnChange": {
       "description": "Activates or deactivates 'deploy on change' feature for all packages.",
       "type": "boolean",
       "default": true
      },
      "deployOnSave": {
       "description": "Activates or deactivates 'deploy on save' feature for all packages.",
       "type": "boolean",
       "default": true
      },
      "globals": {
       "description": "Global data to define, which can be access by scripts, e.g."
      },
      "ignore": {
       "description": "One or more pattern of files that should be ignored even if a deploy is started for them.",
       "type": "array",
       "items": {
        "description": "The patterns of files that should be ignored even if a deploy is started for them.",
        "type": "string"
       }
      },
      "imports": {
       "description": "Defines of or more JSON files with settings to import.",
       "oneOf": [
        {
         "description": "The path (or URI) to the source of the import file.",
         "type": "string"
        },
        {
         "description": "Import file settings.",
         "type": "object",
         "properties": {
          "from": {
           "description": "The path (or URI) to the source of the import file.",
           "type": "string"
          },
          "if": {
           "description": "(JavaScript) Code that should be invoked, to check, if settings are available or not.",
           "type": "string"
          }
         }
        },
        {
         "description": "One or more JSON files to import.",
         "type": "array",
         "items": {
          "oneOf": [
           {
            "description": "The path (or URI) to the source of the import file.",
            "type": "string"
           },
           {
            "description": "Import file settings.",
            "type": "object",
            "properties": {
             "from": {
              "description": "The path (or URI) to the source of the import file.",
              "type": "string"
             },
             "if": {
              "description": "(JavaScript) Code that should be invoked, to check, if settings are available or not.",
              "type": "string"
             }
            }
           }
          ]
         }
        }
       ]
      },
      "language": {
       "description": "The custom ID of the language to use (e.g. 'en', 'de').",
       "type": "string"
      },
      "openOutputOnStartup": {
       "description": "Open the output window after config has been reloaded or not.",
       "type": "boolean",
       "default": true
      },
      "packages": {
       "description": "One or more packages to define.",
       "type": "array",
       "items": {
        "type": "object",
        "properties": {
         "button": {
          "oneOf": [
           {
            "description": "Indicates if a button should be created for that package in the status bar or not.",
            "type": "boolean",
            "default": false
           },
           {
            "description": "Defines a button for the status bar.",
            "type": "object",
            "properties": {
             "color": {
              "description": "The (text) color for the button.",
              "type": "string",
              "default": "#ffffff"
             },
             "command": {
              "description": "The custom ID for the command.",
              "type": "string"
             },
             "enable": {
              "description": "Enable button or not.",
              "type": "boolean",
              "default": true
             },
             "isRight": {
              "description": "Put button on the right side or not.",
              "type": "boolean",
              "default": false
             },
             "priority": {
              "description": "The priority.",
              "type": "integer"
             },
             "text": {
              "description": "The custom display text.",
              "type": "string"
             },
             "tooltip": {
              "description": "The custom tooltip.",
              "type": "string"
             }
            }
           }
          ]
         },
         "deployOnChange": {
          "description": "Defines if 'deploy on change' should be used for that package.",
          "oneOf": [
           {
            "description": "Defines if 'deploy on change' feature should be used for that packages, by using its file defintions and targets.",
            "type": "boolean",
            "default": false
           },
           {
            "type": "array",
            "items": {
             "description": "The names of one or more custom targets to deploy to.",
             "type": "string"
            }
           },
           {
            "type": "object",
            "properties": {
             "exclude": {
              "description": "One or more (glob) patterns, that describe what files should be EXCLUDED.",
              "type": "array",
              "items": {
               "description": "A (glob) pattern",
               "type": "string"
              }
             },
             "files": {
              "description": "One or more (glob) patterns, that describe what files should be EXCLUDED.",
              "type": "array",
              "items": {
               "description": "A (glob) pattern",
               "type": "string"
              },
              "default": [
               "**"
              ]
             }
            }
           }
          ]
         },
         "deployOnSave": {
          "description": "Defines if 'deploy on save' should be used for that package.",
          "oneOf": [
           {
            "description": "Defines if 'deploy on save' feature should be used for that packages, by using its file defintions and targets.",
            "type": "boolean",
            "default": false
           },
           {
            "type": "array",
            "items": {
             "description": "The names of one or more custom targets to deploy to.",
             "type": "string"
            }
           },
           {
            "type": "object",
            "properties": {
             "exclude": {
              "description": "One or more (glob) patterns, that describe what files should be EXCLUDED.",
              "type": "array",
              "items": {
               "description": "A (glob) pattern",
               "type": "string"
              }
             },
             "files": {
              "description": "One or more (glob) patterns, that describe what files should be EXCLUDED.",
              "type": "array",
              "items": {
               "description": "A (glob) pattern",
               "type": "string"
              },
              "default": [
               "**"
              ]
             }
            }
           }
          ]
         },
         "description": {
          "description": "A description for that package.",
          "type": "string"
         },
         "exclude": {
          "description": "A list of one or more (glob) patterns of files, that should be execluded from deployment.",
          "type": "array",
          "items": {
           "type": "string"
          }
         },
         "files": {
          "description": "A list of one or more (glob) patterns of files that should be deployed. By default ALL files will be deployed.",
          "type": "array",
          "items": {
           "type": "string"
          }
         },
         "if": {
          "description": "(JavaScript) Code, which indicates, if entry is available or not.",
          "type": "string"
         },
         "name": {
          "description": "A (display) name for that package.",
          "type": "string"
         },
         "removeOnChange": {
          "description": "Defines if 'remove on change' should be used for that package.",
          "oneOf": [
           {
            "description": "Defines if 'remove on change' feature should be used for that packages, by using its file defintions and targets.",
            "type": "boolean",
            "default": false
           },
           {
            "type": "array",
            "items": {
             "description": "The names of one or more custom targets to deploy to.",
             "type": "string"
            }
           },
           {
            "type": "object",
            "properties": {
             "exclude": {
              "description": "One or more (glob) patterns, that describe what files should be EXCLUDED.",
              "type": "array",
              "items": {
               "description": "A (glob) pattern",
               "type": "string"
              }
             },
             "files": {
              "description": "One or more (glob) patterns, that describe what files should be EXCLUDED.",
              "type": "array",
              "items": {
               "description": "A (glob) pattern",
               "type": "string"
              },
              "default": [
               "**"
              ]
             }
            }
           }
          ]
         },
         "syncWhenOpen": {
          "description": "Defines if 'sync when open' should be used for that package.",
          "oneOf": [
           {
            "description": "Defines if 'sync when open' feature should be used for that packages, by using its file defintions and targets.",
            "type": "boolean",
            "default": false
           },
           {
            "description": "The name of the target from where to sync.",
            "type": "string"
           },
           {
            "description": "The name of the target from where to sync.",
            "type": "object"
           },
           {
            "type": "object",
            "properties": {
             "exclude": {
              "description": "One or more (glob) patterns, that describe what files should be EXCLUDED.",
              "type": "array",
              "items": {
               "description": "A (glob) pattern",
               "type": "string"
              }
             },
             "files": {
              "description": "One or more (glob) patterns, that describe what files should be EXCLUDED.",
              "type": "array",
              "items": {
               "description": "A (glob) pattern",
               "type": "string"
              },
              "default": [
               "**"
              ]
             }
            }
           }
          ]
         },
         "targets": {
          "description": "One or more explicit targets.",
          "type": "array",
          "items": {
           "type": "string"
          }
         }
        }
       }
      },
      "removeOnChange": {
       "description": "Activates or deactivates 'remove on change' feature for all packages.",
       "type": "boolean",
       "default": true
      },
      "runBuildTaskOnStartup": {
       "description": "Indicates if build task should be run on startup or not.",
       "oneOf": [
        {
         "type": "boolean",
         "description": "Indicates if build task should be run on startup or not.",
         "default": false
        },
        {
         "type": "integer",
         "description": "Defines the number of milliseconds to wait, before the build task is run.",
         "minimum": 0
        }
       ]
      },
      "runGitPullOnStartup": {
       "description": "Indicates if Git pull should be run on startup or not.",
       "oneOf": [
        {
         "type": "boolean",
         "description": "Indicates if Git pull should be run on startup or not.",
         "default": false
        },
        {
         "type": "integer",
         "description": "Defines the number of milliseconds to wait before the Git sync is run.",
         "minimum": 0
        }
       ]
      },
      "syncWhenOpen": {
       "description": "Activates or deactivates 'sync when open' feature for all packages.",
       "type": "boolean",
       "default": true
      },
      "targets": {
       "description": "One or more targets to define.",
       "type": "array",
       "items": {
        "oneOf": [
         {
          "type": "object",
          "properties": {
           "beforeDeploy": {
            "description": "One or more target operation to define.",
            "type": "array",
            "items": {
             "oneOf": [
              {
               "type": "object",
               "properties": {
                "if": {
                 "description": "(JavaScript) Code, which indicates, if entry is available or not.",
                 "type": "string"
                },
                "target": {
                 "description": "The thing to open.",
                 "type": "string",
                 "pattern": "\\S+"
                },
                "type": {
                 "enum": [
                  "open",
                  ""
                 ],
                 "type": "string",
                 "description": "Opens something, like an app or URL on the current machine."
                },
                "wait": {
                 "description": "Wait until operation has been finished or not.",
                 "type": "boolean",
                 "default": true
                }
               },
               "required": [
                "target"
               ]
              }
             ]
            }
           },
           "deployed": {
            "description": "One or more target operation to define.",
            "type": "array",
            "items": {
             "oneOf": [
              {
               "type": "object",
               "properties": {
                "if": {
                 "description": "(JavaScript) Code, which indicates, if entry is available or not.",
                 "type": "string"
                },
                "target": {
                 "description": "The thing to open.",
                 "type": "string",
                 "pattern": "\\S+"
                },
                "type": {
                 "enum": [
                  "open",
                  ""
                 ],
                 "type": "string",
                 "description": "Opens something, like an app or URL on the current machine."
                },
                "wait": {
                 "description": "Wait until operation has been finished or not.",
                 "type": "boolean",
                 "default": true
                }
               },
               "required": [
                "target"
               ]
              }
             ]
            }
           },
           "description": {
            "description": "A description for that target.",
            "type": "string"
           },
           "hideIf": {
            "description": "Defines a list of one or more package names, which will hide this target from GUI, if one of them is selected.",
            "type": "array",
            "items": {
             "description": "A name of a package.",
             "type": "string"
            }
           },
           "if": {
            "description": "(JavaScript) Code, which indicates, if entry is available or not.",
            "type": "string"
           },
           "name": {
            "description": "The (display) name of that target.",
            "type": "string"
           },
           "showIf": {
            "description": "Defines a list of one or more package names, which will show this target in GUI, if one of them is selected.",
            "type": "array",
            "items": {
             "description": "A name of a package.",
             "type": "string"
            }
           },
           "targets": {
            "description": "One or more names of other targets.",
            "type": "array",
            "items": {
             "description": "The name of another target.",
             "type": "string"
            }
           },
           "transformer": {
            "description": "The path (or URI) to the data transformer script.",
            "type": "string"
           },
           "transformerOptions": {
            "description": "Options for the data transformer script."
           },
           "type": {
            "enum": [
             "batch"
            ],
            "type": "string",
            "description": "Deploys to a list of other targets."
           }
          },
          "required": [
           "targets"
          ]
         },
         {
          "type": "object",
          "properties": {
           "beforeDeploy": {
            "description": "One or more target operation to define.",
            "type": "array",
            "items": {
             "oneOf": [
              {
               "type": "object",
               "properties": {
                "if": {
                 "description": "(JavaScript) Code, which indicates, if entry is available or not.",
                 "type": "string"
                },
                "target": {
                 "description": "The thing to open.",
                 "type": "string",
                 "pattern": "\\S+"
                },
                "type": {
                 "enum": [
                  "open",
                  ""
                 ],
                 "type": "string",
                 "description": "Opens something, like an app or URL on the current machine."
                },
                "wait": {
                 "description": "Wait until operation has been finished or not.",
                 "type": "boolean",
                 "default": true
                }
               },
               "required": [
                "target"
               ]
              }
             ]
            }
           },
           "deployed": {
            "description": "One or more target operation to define.",
            "type": "array",
            "items": {
             "oneOf": [
              {
               "type": "object",
               "properties": {
                "if": {
                 "description": "(JavaScript) Code, which indicates, if entry is available or not.",
                 "type": "string"
                },
                "target": {
                 "description": "The thing to open.",
                 "type": "string",
                 "pattern": "\\S+"
                },
                "type": {
                 "enum": [
                  "open",
                  ""
                 ],
                 "type": "string",
                 "description": "Opens something, like an app or URL on the current machine."
                },
                "wait": {
                 "description": "Wait until operation has been finished or not.",
                 "type": "boolean",
                 "default": true
                }
               },
               "required": [
                "target"
               ]
              }
             ]
            }
           },
           "description": {
            "description": "A description for that target.",
            "type": "string"
           },
           "hideIf": {
            "description": "Defines a list of one or more package names, which will hide this target from GUI, if one of them is selected.",
            "type": "array",
            "items": {
             "description": "A name of a package.",
             "type": "string"
            }
           },
           "if": {
            "description": "(JavaScript) Code, which indicates, if entry is available or not.",
            "type": "string"
           },
           "name": {
            "description": "The (display) name of that target.",
            "type": "string"
           },
           "showIf": {
            "description": "Defines a list of one or more package names, which will show this target in GUI, if one of them is selected.",
            "type": "array",
            "items": {
             "description": "A name of a package.",
             "type": "string"
            }
           },
           "transformer": {
            "description": "The path (or URI) to the data transformer script.",
            "type": "string"
           },
           "transformerOptions": {
            "description": "Options for the data transformer script."
           },
           "type": {
            "enum": [
             "local",
             ""
            ],
            "type": "string",
            "description": "Deploys to a local folder or a shared folder (like SMB) inside your LAN."
           }
          }
         },
         {
          "type": "object",
          "properties": {
           "beforeDeploy": {
            "description": "One or more target operation to define.",
            "type": "array",
            "items": {
             "oneOf": [
              {
               "type": "object",
               "properties": {
                "if": {
                 "description": "(JavaScript) Code, which indicates, if entry is available or not.",
                 "type": "string"
                },
                "target": {
                 "description": "The thing to open.",
                 "type": "string",
                 "pattern": "\\S+"
                },
                "type": {
                 "enum": [
                  "open",
                  ""
                 ],
                 "type": "string",
                 "description": "Opens something, like an app or URL on the current machine."
                },
                "wait": {
                 "description": "Wait until operation has been finished or not.",
                 "type": "boolean",
                 "default": true
                }
               },
               "required": [
                "target"
               ]
              }
             ]
            }
           },
           "deployed": {
            "description": "One or more target operation to define.",
            "type": "array",
            "items": {
             "oneOf": [
              {
               "type": "object",
               "properties": {
                "if": {
                 "description": "(JavaScript) Code, which indicates, if entry is available or not.",
                 "type": "string"
                },
                "target": {
                 "description": "The thing to open.",
                 "type": "string",
                 "pattern": "\\S+"
                },
                "type": {
                 "enum": [
                  "open",
                  ""
                 ],
                 "type": "string",
                 "description": "Opens something, like an app or URL on the current machine."
                },
                "wait": {
                 "description": "Wait until operation has been finished or not.",
                 "type": "boolean",
                 "default": true
                }
               },
               "required": [
                "target"
               ]
              }
             ]
            }
           },
           "description": {
            "description": "A description for that target.",
            "type": "string"
           },
           "hideIf": {
            "description": "Defines a list of one or more package names, which will hide this target from GUI, if one of them is selected.",
            "type": "array",
            "items": {
             "description": "A name of a package.",
             "type": "string"
            }
           },
           "if": {
            "description": "(JavaScript) Code, which indicates, if entry is available or not.",
            "type": "string"
           },
           "name": {
            "description": "The (display) name of that target.",
            "type": "string"
           },
           "showIf": {
            "description": "Defines a list of one or more package names, which will show this target in GUI, if one of them is selected.",
            "type": "array",
            "items": {
             "description": "A name of a package.",
             "type": "string"
            }
           },
           "transformer": {
            "description": "The path (or URI) to the data transformer script.",
            "type": "string"
           },
           "transformerOptions": {
            "description": "Options for the data transformer script."
           },
           "type": {
            "enum": [
             "test"
            ],
            "type": "string",
            "description": "A mock deployer that only checks what files will be deployed."
           }
          }
         }
        ]
       }
      },
      "timeToWaitBeforeActivateDeployOnChange": {
       "description": "The time (in milliseconds) to wait before activating 'deploy on change' feature.",
       "type": "integer",
       "minimum": 0
      },
      "timeToWaitBeforeActivateRemoveOnChange": {
       "description": "The time (in milliseconds) to wait before activating 'remove on change' feature.",
       "type": "integer",
       "minimum": 0
      },
      "values": {
       "description": "One or more values to define.",
       "type": "object",
       "patternProperties": {
        "(.*)": {
         "description": "The value to define.",
         "oneOf": [
          {
           "description": "A static array value.",
           "type": "array",
           "properties": null
          },
          {
           "description": "A static bool value.",
           "type": "boolean",
           "properties": null
          },
          {
           "description": "A static number value.",
           "type": "number",
           "properties": null
          },
          {
           "description": "A static (null) value.",
           "type": "null",
           "properties": null
          },
          {
           "description": "A static string value.",
           "type": "string",
           "properties": null
          },
          {
           "type": "object",
           "properties": {
            "if": {
             "description": "(JavaScript) Code, which indicates, if entry is available or not.",
             "type": "string"
            },
            "name": {
             "description": "The name of that value.",
             "type": "string"
            },
            "type": {
             "enum": [
              "static",
              ""
             ],
             "type": "string",
             "description": "A static value."
            },
            "value": {
             "description": "The value."
            }
           },
           "required": [
            "value"
           ]
          },
          {
           "type": "object",
           "properties": {
            "code": {
             "description": "The code to execute.",
             "type": "string"
            },
            "if": {
             "description": "(JavaScript) Code, which indicates, if entry is available or not.",
             "type": "string"
            },
            "name": {
             "description": "The name of that value.",
             "type": "string"
            },
            "type": {
             "enum": [
              "code",
              "ecmascript",
              "javascript",
              "js"
             ],
             "type": "string",
             "description": "A value based on (JavaScript) code."
            }
           },
           "required": [
            "code"
           ]
          }
         ]
        }
       }
      }
     }
    }
   }
  }
 },
 "scripts": {
  "vscode:prepublish": "npm run compile",
  "compile": "tsc -p ./",
  "watch": "tsc -watch -p ./",
  "postinstall": "node ./node_modules/vscode/bin/install",
  "test": "npm run compile && node ./node_modules/vscode/bin/test"
 },
 "devDependencies": {
  "@types/filesize": "^3.2.15",
  "@types/fs-extra": "^4.0.5",
  "@types/glob": "^5.0.33",
  "@types/i18next": "^8.4.2",
  "@types/mime-types": "^2.1.0",
  "@types/minimatch": "^3.0.1",
  "@types/mocha": "^2.2.42",
  "@types/node": "^7.0.43",
  "@types/tmp": "0.0.33",
  "@types/uuid": "^3.4.3",
  "typescript": "^2.6.1",
  "vscode": "^1.1.6"
 },
 "icon": "icon.png",
 "author": {
  "name": "Marcel Joachim Kloubert"
 },
 "repository": {
  "type": "git",
  "url": "https://github.com/mkloubert/vscode-deploy-reloaded"
 },
 "bugs": {
  "url": "https://github.com/mkloubert/vscode-deploy-reloaded/issues"
 },
 "readmeFilename": "README.md",
 "dependencies": {
  "filesize": "^3.5.11",
  "fs-extra": "^4.0.2",
  "glob": "^7.1.2",
  "i18next": "^10.2.1",
  "merge-deep": "^3.0.0",
  "mime-types": "^2.1.17",
  "minimatch": "^3.0.4",
  "moment": "^2.19.3",
  "node-enumerable": "^3.8.0",
  "tmp": "0.0.33",
  "uuid": "^3.1.0"
 }
}
